@model ReadLater5.ViewModels.BookmarkCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Bookmark</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
        <!--#region URL-->
        <div class="form-group">
            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--#endregion-->

        <!--#region Short Description-->
        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--#endregion-->
        
        <!--#region Create category-->
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateCategory, "createCategory")
                Create category
                @Html.ValidationMessageFor(model => model.CreateCategory, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--#endregion-->

        <!--#region Category Name-->
        
        <div class="form-group" id="categoryName" style="display: none">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--#endregion-->
        
        <!--#region Category Id-->
        
        @{
            var categories = ViewData["Categories"];
        }
        <div class="form-group" id="categoryId">
            <label asp-for="CategoryId" class="control-label"></label>
            <select asp-for="CategoryId" class="form-control" asp-items="categories as SelectList"></select>
            <span asp-validation-for="CategoryId" class="text-danger"></span>
        </div>

        <!--#endregion-->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    const el = document.getElementById("CreateCategory");
    sync(el.checked);

    el.addEventListener('change', function () {
        sync(this.checked);
    });

    function sync(checked) {
        document.getElementById('categoryName').style.display = checked
            ? 'initial'
            : 'none';

        document.getElementById('categoryId').style.display = checked
            ? 'none'
            : 'initial';
    }
</script>